import pandas as pd
import numpy as np

pth = r'e:\Users\remezov_ab\Desktop\work\dataset.txt' # 'r' = 'raw' - в данном случае чтобы корректно считывались слеши

#	id	animal	weight_kg	height_cm	date_of_birth	new_var
#0	1	cat	5.0	50	2022-04-03	1.0
#1	2	dog	15.0	80	2019-01-01	1.0
#2	3	cat	3.0	45	2016-08-02	0.0
#3	4	rabbit	6.0	35	2015-01-07	1.0
#4	5	dog	45.0	90	2021-09-09	1.0

# считываем датафрейм
df = pd.read_csv(pth, sep='\t') # разделитель - может быть 'tab' (табуляция), ';'- самые частые

df

df.shape # смотрим размер датафрейма; первый элемент кортежа - количество строк, второй элемент - количество столбцов

df.dtypes # типы данных

df['animal'] # при таком обращении получается объект под названием series

type(df['animal'])

# можно сменить тип данных
df['weight_kg'] = df['weight_kg'].astype('float64')

df.dtypes # типы данных

df['weight_kg']

# конвертируем день рождения в тип даты
df['date_of_birth'] = pd.to_datetime(df['date_of_birth'])

df.dtypes # типы данных

# с датами и временем надо быть очень аккуратным всегда, могут перепутаться месяцы и дни местами и т.п., таймзоны

# пример вычисления новой переменной 
# s - объект series - поэлементно сравнивает условие
# в конструкции df.loc значение 1 проставляется только там, где элемент в series==True
s = df['weight_kg']>=5
df.loc[s, 'new_var'] = 1

df

# остался один элемент NAN, его можно заполнить нулем
s = df['new_var'].isnull()==True
df.loc[s, 'new_var'] = 0

df

# простой пример сводной таблицы; группируем по полю animal, аггрегируем поле weight_kg в сумму
pivot = df.groupby(['animal']).agg({'weight_kg':'sum'})

pivot

pivot = df.groupby(['animal']).agg({'weight_kg':'sum'}).reset_index() # превращаем в обычный датафрейм

pivot
